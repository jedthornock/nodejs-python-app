on:
  release:
    types: [published]

env:
  TAG: $GITHUB_REF_NAME
  
jobs:
  update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: PrintEnv
        run: printenv
      - name: Current Path
        run: pwd
      - name: List Directory
        run: ls -ltr
      - name: Update release
        uses: IsaacShelton/update-existing-release@v1.2.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release: ${{ env.GITHUB_REF_NAME }}
          replace: true
          files: CHANGELOG.md
          message: "JED TEST REPLACE"
      - name: Display GitHub Var
        run: |
          echo ${{ env.TAG }}

# jobs:
#   build:
#     name: Create Release
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2
#         with:
#           fetch-depth: 0
#       - name: Changelog
#         uses: Bullrich/generate-release-changelog@master
#         id: Changelog
#         env:
#           REPO: ${{ github.repository }}
#       - name: Create Release
#         id: create_release
#         uses: actions/create-release@latest
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
#         with:
#           tag_name: ${{ github.ref }}
#           release_name: Release ${{ github.ref }}
#           body: |
#             ${{ steps.Changelog.outputs.changelog }}
#           draft: false
#           prerelease: false

# jobs:
#   comment:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#       - name: printenv
#         run: printenv
#     steps:
#       - uses: actions/checkout@v2
#       - name: Set up Python
#         uses: actions/setup-python@v1
#         with:
#           python-version: "3.8"
#       - name: Update version
#         id: version
#         run: |
#           printenv
#           echo "GITHUB_REF is a tag you set for the release"
#           echo "Your GitHub ref: ${GITHUB_REF}"
#           VERSION=`echo "${GITHUB_REF}" | cut -f 3 -d "/"`
#           echo "Preparing version ${VERSION}"
#           echo "__version__ = \"${VERSION}\"" > __version__.py
#           echo "##[set-output name=version;]$(echo ${VERSION})"
#       - uses: vemel/update-changelog@0.0.1
#         id: changelog
#         with:
#           version: ${{ steps.version.outputs.version }}
#       - name: Create Pull Request
#         uses: peter-evans/create-pull-request@v2
#         with:
#           commit-message: Release ${{ steps.version.outputs.version }}
#           labels: release, bot
#           title: "Release ${{ steps.version.outputs.version }}"
#           body: |
#             # Release ${{ steps.version.outputs.version }}

#             Merge this PR to update your version and changelog!

#             ## Included Pull Requests

#             ${{ steps.changelog.outputs.pulls_list_md }}
